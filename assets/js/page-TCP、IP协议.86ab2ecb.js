(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{612:function(t,s,a){t.exports=a.p+"assets/img/1657899972118.e30a009a.png"},613:function(t,s,a){t.exports=a.p+"assets/img/1657900073998.bb362f3e.png"},614:function(t,s,a){t.exports=a.p+"assets/img/1657900156234.5d106249.png"},615:function(t,s,a){t.exports=a.p+"assets/img/1657900425647.8a385ef8.png"},616:function(t,s,a){t.exports=a.p+"assets/img/1657945454657.1c403626.png"},617:function(t,s,a){t.exports=a.p+"assets/img/1657946064073.b566c391.png"},618:function(t,s,a){t.exports=a.p+"assets/img/1657952047843.19ccc65f.png"},619:function(t,s,a){t.exports=a.p+"assets/img/1657952462308.5ddbf1e7.png"},620:function(t,s,a){t.exports=a.p+"assets/img/1657953345992.ad7acd28.png"},621:function(t,s,a){t.exports=a.p+"assets/img/1657953377870.b9fafeaf.png"},622:function(t,s,a){t.exports=a.p+"assets/img/1657953810956.a9f90652.png"},623:function(t,s,a){t.exports=a.p+"assets/img/1657958426733.8e2d456e.png"},624:function(t,s,a){t.exports=a.p+"assets/img/1657958629736.7414337c.png"},946:function(t,s,a){"use strict";a.r(s);var r=a(1),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("blockquote",[r("p",[t._v("也称为互联网协议群，类似OSI模型，一种网络协议的概念模型，但是它简化的OSI模型。")])]),t._v(" "),r("h2",{attrs:{id:"互联网协议群"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#互联网协议群"}},[t._v("#")]),t._v(" 互联网协议群")]),t._v(" "),r("ul",[r("li",[t._v("应用层（Application）")]),t._v(" "),r("li",[t._v("传输层（Transport）")]),t._v(" "),r("li",[t._v("网络层（Internet）")]),t._v(" "),r("li",[t._v("链路层（Link）")]),t._v(" "),r("li",[t._v("物理层（Pysical）")])]),t._v(" "),r("h3",{attrs:{id:"ip封包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ip封包"}},[t._v("#")]),t._v(" IP封包：")]),t._v(" "),r("p",[r("img",{attrs:{src:a(612),alt:"1657899972118"}})]),t._v(" "),r("p",[r("img",{attrs:{src:a(613),alt:"1657900073998"}})]),t._v(" "),r("p",[r("img",{attrs:{src:a(614),alt:"1657900156234"}})]),t._v(" "),r("h3",{attrs:{id:"tcp协议封包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp协议封包"}},[t._v("#")]),t._v(" TCP协议封包")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("每个封包称作一个TCP信息段(TCP Segment);")])]),t._v(" "),r("li",[r("p",[t._v("Header用于描述传输行为(如源端口、目标端口等)；")])]),t._v(" "),r("li",[r("p",[t._v("Header后面跟若干个byte数据，没个byte拥有自己的序列号；")])]),t._v(" "),r("li",[r("p",[t._v("一个完整的封包：")]),t._v(" "),r("p",[r("img",{attrs:{src:a(615),alt:"1657900425647"}})])])]),t._v(" "),r("h2",{attrs:{id:"三次握手"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三次握手"}},[t._v("#")]),t._v(" 三次握手")]),t._v(" "),r("blockquote",[r("p",[t._v("场景alice想和bob聊天。")])]),t._v(" "),r("p",[r("img",{attrs:{src:a(616),alt:"1657945454657"}})]),t._v(" "),r("p",[t._v("以上图中的情况，如果是人与人之间的聊天，那么这个对话就可以进行了，但是会有一个异常的情况，如果Bob回复的消息比较慢而这期间 Alice 也正好离开了，那么后面的对话便无法在继续进行。以上的场景如果作为两个机器人的对话，当Bob发送的消息得不到Alice的回复时，这个连接便无法建立，所有需要3次握手才能建立连接。")]),t._v(" "),r("p",[r("img",{attrs:{src:a(617),alt:"1657946064073"}})]),t._v(" "),r("h2",{attrs:{id:"处理数据顺序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#处理数据顺序"}},[t._v("#")]),t._v(" 处理数据顺序")]),t._v(" "),r("p",[t._v("我们先看以下的对话场景；")]),t._v(" "),r("p",[r("img",{attrs:{src:a(618),alt:"1657952047843"}})]),t._v(" "),r("p",[t._v('在上面的对话中，会存在一个问题，就是Bob回复的两句中，哪一句是对应alice中的第一句，你是不知道的。同时由于网络中的各种原因，"你们班有多少同学？"可能会比"你今年多大了?"先到，这个时候就更加无法确定语句的先后顺序了。')]),t._v(" "),r("h3",{attrs:{id:"解决方式一"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#解决方式一"}},[t._v("#")]),t._v(" 解决方式一：")]),t._v(" "),r("p",[t._v("给发送的消息添加序号：")]),t._v(" "),r("p",[r("img",{attrs:{src:a(619),alt:"1657952462308"}})]),t._v(" "),r("p",[t._v("但是这样也会产生问题，当Bob发送序号为 3 的消息时，又如何知道 Alice 不会在发送一条序号为 3 的消息呢？这样以来序号又冲突了。")]),t._v(" "),r("h3",{attrs:{id:"解决方式二"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#解决方式二"}},[t._v("#")]),t._v(" 解决方式二：")]),t._v(" "),r("p",[t._v("给发送的消息添加发送时间：")]),t._v(" "),r("p",[t._v("但是这样也会产生一个问题，Alice和Bob的时间不一定就是一样的，有可能Bob的时间会比Alice快。")]),t._v(" "),r("h3",{attrs:{id:"解决方式三"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#解决方式三"}},[t._v("#")]),t._v(" 解决方式三：")]),t._v(" "),r("p",[t._v("消息的绝对顺序用(SEQ,ACK)这一对元组描述")]),t._v(" "),r("ul",[r("li",[t._v("SEQ(Sequence)：这个消息发送前一共发送了多少字节；")]),t._v(" "),r("li",[t._v("ACK(Acknowledge)：这个消息发送前一共收到了多少字节；")])]),t._v(" "),r("h4",{attrs:{id:"三次握手-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三次握手-2"}},[t._v("#")]),t._v(" 三次握手")]),t._v(" "),r("p",[r("img",{attrs:{src:a(620),alt:"1657953345992"}})]),t._v(" "),r("h4",{attrs:{id:"数据传送"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据传送"}},[t._v("#")]),t._v(" 数据传送")]),t._v(" "),r("p",[r("img",{attrs:{src:a(621),alt:"1657953377870"}})]),t._v(" "),r("h4",{attrs:{id:"顺序解决"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#顺序解决"}},[t._v("#")]),t._v(" 顺序解决")]),t._v(" "),r("p",[r("img",{attrs:{src:a(622),alt:"1657953810956"}})]),t._v(" "),r("div",{staticClass:"custom-block info"},[r("p",{staticClass:"custom-block-title"},[t._v("相关信息")]),t._v(" "),r("p",[t._v("发送到服务端的数据并不是立即响应式的，而是有一个时间窗口，在这个窗口内，都会实时的接受消息，最后响应。因为如果是立即响应时的话，那么在服务端收到第一条消息时，第二条消息还没到达，但是服务器就已经回复了，那么回复的内容就可能是错的。另外这个窗口期也不会太短，因为你总不能等待一年后在收到消息然后回复吧。")])]),t._v(" "),r("h2",{attrs:{id:"挥手-中断连接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#挥手-中断连接"}},[t._v("#")]),t._v(" 挥手(中断连接)")]),t._v(" "),r("h3",{attrs:{id:"场景一"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#场景一"}},[t._v("#")]),t._v(" 场景一")]),t._v(" "),r("p",[t._v("Alice发送Bye的时候，Bob在没有收到Alice的消息之前，也可能发送消息给Alice，所以仅以这种方式结束会话是不行的。")]),t._v(" "),r("p",[r("img",{attrs:{src:a(623),alt:"1657958426733"}})]),t._v(" "),r("h3",{attrs:{id:"场景二"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#场景二"}},[t._v("#")]),t._v(" 场景二")]),t._v(" "),r("p",[t._v("Alice发送完Bye后，Bob接收到消息，但是Bob会等待所有对话完成后，发送Bye给Alice同时Alice也会等待所有对话完成，然后回复消息给Bob，最后中断连接。")]),t._v(" "),r("p",[r("img",{attrs:{src:a(624),alt:"1657958629736"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);