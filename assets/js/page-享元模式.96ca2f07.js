(window.webpackJsonp=window.webpackJsonp||[]).push([[162],{899:function(t,l,e){"use strict";e.r(l);var n=e(1),v=Object(n.a)({},(function(){var t=this,l=t.$createElement,e=t._self._c||l;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("blockquote",[e("p",[t._v("目的是减少对象/代码数量，运用共享技术来有效地支持大量细粒度对象的复用。它通过共享已经存在的对象来大幅度减少需要创建的对象数量、避免大量相似类的开销，从而提高系统资源的利用率。")])]),t._v(" "),e("p",[t._v("享元模式的主要优点是：")]),t._v(" "),e("ul",[e("li",[t._v("相同对象只要保存一份，降低了系统中对象的数量。")]),t._v(" "),e("li",[t._v("降低了系统中细粒度对象给内存带来的压力。")])]),t._v(" "),e("p",[t._v("享元模式的主要缺点是：")]),t._v(" "),e("ul",[e("li",[t._v("为了使对象可以共享，需要将一些不能共享的状态外部化，这将增加程序的复杂性。")]),t._v(" "),e("li",[t._v("读取享元模式的外部状态会使得运行时间稍微变长。")])])])}),[],!1,null,null,null);l.default=v.exports}}]);