(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{950:function(e,v,_){"use strict";_.r(v);var o=_(1),s=Object(o.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("p",[_("strong",[e._v("什么是"),_("code",[e._v("Promise A+")]),e._v("规范")])]),e._v(" "),_("p",[e._v("答：它一个开放、健全且通用的 JavaScript Promise 标准，由开发者制定，供开发者参考。"),_("code",[e._v("Promise A+")]),e._v("规范实际上是把之前 "),_("a",{attrs:{href:"http://wiki.commonjs.org/wiki/Promises/A",target:"_blank",rel:"noopener noreferrer"}},[e._v("Promise/A 规范"),_("OutboundLink")],1),e._v(" 中的建议，明确成为了行为标准：我们一方面扩展了原有规范约定俗成的行为，一方面删减了原规范的一些特例情况和有问题的部分。 "),_("strong",[e._v("Promises/A+ 规范不设计如何创建、解决和拒绝 promise，而是专注于提供一个通用的 "),_("code",[e._v("then")]),e._v(" 方法")]),e._v("；")]),e._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[e._v("提示")]),e._v(" "),_("p",[e._v("如果你想写出一个规范的 "),_("code",[e._v("Promise")]),e._v("，我们就需要遵循这个标准——"),_("code",[e._v("Promise A+")]),e._v("规范。")])]),e._v(" "),_("h2",{attrs:{id:"术语"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#术语"}},[e._v("#")]),e._v(" 术语")]),e._v(" "),_("ul",[_("li",[e._v("promise：是一个拥有 "),_("code",[e._v("then")]),e._v(" 方法的对象或函数，其行为符合本规范。")]),e._v(" "),_("li",[e._v("thenable：是一个定义了 "),_("code",[e._v("then")]),e._v(" 方法的对象或函数。")]),e._v(" "),_("li",[e._v("值（value）：指任何 JavaScript 的合法值（包括 "),_("code",[e._v("undefined")]),e._v(" , thenable 和 promise）；")]),e._v(" "),_("li",[e._v("异常（exception）：是使用 "),_("code",[e._v("throw")]),e._v(" 语句抛出的一个值。")]),e._v(" "),_("li",[e._v("据因（reason）：表示一个 promise 的拒绝原因。")])]),e._v(" "),_("h2",{attrs:{id:"要求"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#要求"}},[e._v("#")]),e._v(" 要求")]),e._v(" "),_("ol",[_("li",[_("p",[_("strong",[e._v("Promise 的状态")]),e._v("：一个 Promise 的当前状态必须为以下三种状态中的一种："),_("strong",[e._v("等待态（Pending）")]),e._v("、"),_("strong",[e._v("执行态（Fulfilled）"),_("strong",[e._v("和")]),e._v("拒绝态（Rejected）")]),e._v("。")]),e._v(" "),_("ul",[_("li",[_("strong",[e._v("Pending")]),e._v("： 处于等待态时，promise 需满足以下条件。\n"),_("ul",[_("li",[e._v("可以迁移至执行态或拒绝态。")])])]),e._v(" "),_("li",[_("strong",[e._v("Fulfilled")]),e._v("：处于执行态时，promise 需满足以下条件。\n"),_("ul",[_("li",[e._v("不能迁移至其他任何状态。")]),e._v(" "),_("li",[e._v("必须拥有一个"),_("strong",[e._v("不可变")]),e._v("的终值。")])])]),e._v(" "),_("li",[_("strong",[e._v("Rejected")]),e._v("：处于拒绝态时，promise 需满足以下条件。\n"),_("ul",[_("li",[e._v("不能迁移至其他任何状态。")]),e._v(" "),_("li",[e._v("必须拥有一个"),_("strong",[e._v("不可变")]),e._v("的据因。\n"),_("ul",[_("li",[e._v("这里的不可变指的是恒等（===），而不是意味着更深层次的不可变（盖指当 value 或 reason 不是基本值时，只要求其引用地址相等，但属性值可被更改）。")])])])])])])]),e._v(" "),_("li",[_("p",[_("strong",[e._v("Then 方法")]),e._v("：一个 promise 必须提供一个 "),_("code",[e._v("then")]),e._v(" 方法以访问其当前值、终值和据因。")]),e._v(" "),_("div",{staticClass:"language-javascript line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-javascript"}},[_("code",[_("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 一个 promise 的then方法接受两个参数：")]),e._v("\npromise"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("then")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("onFulfilled"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" onRejected"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br")])]),_("ul",[_("li",[_("p",[_("code",[e._v("onFulfilled")]),e._v(" 和 "),_("code",[e._v("onRejected")]),e._v(" 都是可选参数。")]),e._v(" "),_("ul",[_("li",[e._v("如果 "),_("code",[e._v("onFulfilled")]),e._v(" 不是函数，其必须被忽略。")]),e._v(" "),_("li",[e._v("如果 "),_("code",[e._v("onRejected")]),e._v(" 不是函数，其必须被忽。")])])]),e._v(" "),_("li",[_("p",[_("strong",[e._v("onFulfilled")]),e._v("：如果"),_("code",[e._v("onFulfilled")]),e._v("是一个函数。")]),e._v(" "),_("ul",[_("li",[e._v("当 "),_("code",[e._v("promise")]),e._v(" 执行结束后其必须被调用，并将"),_("code",[e._v("promise")]),e._v("的值作为它的第一个参数。")]),e._v(" "),_("li",[e._v("在"),_("code",[e._v("promise")]),e._v("完成之前不能调用它。")]),e._v(" "),_("li",[e._v("它不能被多次调用，其调用次数不可超过一次。")])])]),e._v(" "),_("li",[_("p",[_("strong",[e._v("onRejected")]),e._v("：如果"),_("code",[e._v("onRejected")]),e._v("是函数。")]),e._v(" "),_("ul",[_("li",[e._v("当 "),_("code",[e._v("promise")]),e._v(" 被拒绝执行后其必须被调用，其第一个参数为 "),_("code",[e._v("promise")]),e._v(" 的据因(``reason`)。")]),e._v(" "),_("li",[e._v("在"),_("code",[e._v("promise")]),e._v("被拒绝之前不能调用它。")]),e._v(" "),_("li",[e._v("它不能被多次调用，其调用次数不可超过一次。")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("onFulfilled")]),e._v(" 和 "),_("code",[e._v("onRejected")]),e._v(" 在"),_("a",{attrs:{href:"https://es5.github.io/#x10.3",target:"_blank",rel:"noopener noreferrer"}},[e._v("执行上下文"),_("OutboundLink")],1),e._v("堆栈仅包含平台代码之前不得调用. [ "),_("a",{attrs:{href:"https://promisesaplus.com/#notes",target:"_blank",rel:"noopener noreferrer"}},[e._v("3.1"),_("OutboundLink")],1),e._v(" ]。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("onFulfilled")]),e._v(" 和 "),_("code",[e._v("onRejected")]),e._v(" 必须被当做函数调用 (即函数体内的 "),_("code",[e._v("this")]),e._v(" 为"),_("code",[e._v("undefined")]),e._v("). [ "),_("a",{attrs:{href:"https://promisesaplus.com/#notes",target:"_blank",rel:"noopener noreferrer"}},[e._v("3.2"),_("OutboundLink")],1),e._v(" ]")])]),e._v(" "),_("li",[_("p",[e._v("对于一个"),_("code",[e._v("promise")]),e._v("，它的then方法可以调用多次。")]),e._v(" "),_("ul",[_("li",[e._v("当"),_("code",[e._v("promise")]),e._v(" fulfilled后，所有"),_("code",[e._v("onFulfilled")]),e._v("都必须按照其注册顺序执行。")]),e._v(" "),_("li",[e._v("当"),_("code",[e._v("promise")]),e._v(" rejected后，所有"),_("code",[e._v("OnRejected")]),e._v("都必须按照其注册顺序执行。")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("then")]),e._v(" 必须返回一个promise  [ "),_("a",{attrs:{href:"https://promisesaplus.com/#notes",target:"_blank",rel:"noopener noreferrer"}},[e._v("3.3"),_("OutboundLink")],1),e._v(" ].")]),e._v(" "),_("div",{staticClass:"language-javascript line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-javascript"}},[_("code",[e._v("promise2 "),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" promise1"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("then")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("onFulfilled"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" onRejected"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("ul",[_("li",[e._v("如果"),_("code",[e._v("onFulfilled")]),e._v(" 或 "),_("code",[e._v("onRejected")]),e._v(" 返回了值"),_("code",[e._v("x")]),e._v(", 则执行Promise 解析流程"),_("code",[e._v("[[Resolve]](promise2, x)")]),e._v("。")]),e._v(" "),_("li",[e._v("如果任一"),_("code",[e._v("onFulfilled")]),e._v(" 或 "),_("code",[e._v("onRejected")]),e._v("抛出了异常"),_("code",[e._v("e")]),e._v(", 则"),_("code",[e._v("promise2")]),e._v("应当以"),_("code",[e._v("e")]),e._v("为"),_("code",[e._v("reason")]),e._v("被拒绝。")]),e._v(" "),_("li",[e._v("如果"),_("code",[e._v("onFulfilled")]),e._v("不是函数并且"),_("code",[e._v("promise1")]),e._v("已经fulfilled，则"),_("code",[e._v("promise2")]),e._v("必须以"),_("code",[e._v("promise1")]),e._v("的值fulfilled。")]),e._v(" "),_("li",[e._v("如果 "),_("code",[e._v("onReject")]),e._v(" 不是一个函数且"),_("code",[e._v("promise1")]),e._v("已经rejected, 则"),_("code",[e._v("promise2")]),e._v("必须以相同的reason被拒绝.")])])])])])]),e._v(" "),_("h2",{attrs:{id:"promise解析过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#promise解析过程"}},[e._v("#")]),e._v(" Promise解析过程")]),e._v(" "),_("blockquote",[_("p",[_("strong",[e._v("Promise解析过程")]),e._v(" 是以一个promise和一个值做为参数的抽象过程，可表示为"),_("code",[e._v("[[Resolve]](promise, x)")])])]),e._v(" "),_("ol",[_("li",[e._v("如果"),_("code",[e._v("promise")]),e._v(" 和 "),_("code",[e._v("x")]),e._v(" 指向相同的值, 使用 "),_("code",[e._v("TypeError")]),e._v("做为原因将"),_("code",[e._v("promise")]),e._v("拒绝。")]),e._v(" "),_("li",[e._v("如果 "),_("code",[e._v("x")]),e._v(" 是一个"),_("code",[e._v("promise")]),e._v(", 采用其状态 [ "),_("a",{attrs:{href:"https://promisesaplus.com/#notes",target:"_blank",rel:"noopener noreferrer"}},[e._v("3.4"),_("OutboundLink")],1),e._v(" ];\n"),_("ul",[_("li",[e._v("如果"),_("code",[e._v("x")]),e._v("是pending状态，"),_("code",[e._v("promise")]),e._v("必须保持pending状态，直到"),_("code",[e._v("x")]),e._v(" fulfilled或rejected。")]),e._v(" "),_("li",[e._v("如果"),_("code",[e._v("x")]),e._v("是fulfilled状态，将"),_("code",[e._v("x")]),e._v("的值用于fulfill "),_("code",[e._v("promise")]),e._v("。")]),e._v(" "),_("li",[e._v("如果"),_("code",[e._v("x")]),e._v("是rejected状态, 将"),_("code",[e._v("x")]),e._v("的原因用于reject "),_("code",[e._v("promise")]),e._v("。")])])]),e._v(" "),_("li",[e._v("如果"),_("code",[e._v("x")]),e._v("是一个对象或一个函数：\n"),_("ul",[_("li",[e._v("将 "),_("code",[e._v("then")]),e._v(" 赋为 "),_("code",[e._v("x.then")]),e._v(".[ "),_("a",{attrs:{href:"https://promisesaplus.com/#notes",target:"_blank",rel:"noopener noreferrer"}},[e._v("3.5"),_("OutboundLink")],1),e._v(" ]")]),e._v(" "),_("li",[e._v("如果在取"),_("code",[e._v("x.then")]),e._v("值时抛出了异常，则以这个异常做为原因将"),_("code",[e._v("promise")]),e._v("拒绝。")]),e._v(" "),_("li",[e._v("如果 "),_("code",[e._v("then")]),e._v(" 是一个函数， 以"),_("code",[e._v("x")]),e._v("为"),_("code",[e._v("this")]),e._v("调用"),_("code",[e._v("then")]),e._v("函数， 且第一个参数是"),_("code",[e._v("resolvePromise")]),e._v("，第二个参数是"),_("code",[e._v("rejectPromise")]),e._v("，且：\n"),_("ul",[_("li",[e._v("当 "),_("code",[e._v("resolvePromise")]),e._v(" 被以 "),_("code",[e._v("y")]),e._v("为参数调用, 执行 "),_("code",[e._v("[[Resolve]](promise, y)")]),e._v("。")]),e._v(" "),_("li",[e._v("当 "),_("code",[e._v("rejectPromise")]),e._v(" 被以 "),_("code",[e._v("r")]),e._v(" 为参数调用, 则以"),_("code",[e._v("r")]),e._v("为原因将"),_("code",[e._v("promise")]),e._v("拒绝。")]),e._v(" "),_("li",[e._v("如果 "),_("code",[e._v("resolvePromise")]),e._v(" 和 "),_("code",[e._v("rejectPromise")]),e._v(" 都被调用了，或者被调用了多次，则只第一次有效，后面的忽略。")]),e._v(" "),_("li",[e._v("如果在调用"),_("code",[e._v("then")]),e._v("时抛出了异常，则：\n"),_("ul",[_("li",[e._v("如果 "),_("code",[e._v("resolvePromise")]),e._v(" 或 "),_("code",[e._v("rejectPromise")]),e._v(" 已经被调用了，则忽略它。")]),e._v(" "),_("li",[e._v("否则, 以"),_("code",[e._v("e")]),e._v("为reason将 "),_("code",[e._v("promise")]),e._v(" 拒绝。")])])])])]),e._v(" "),_("li",[e._v("如果 "),_("code",[e._v("then")]),e._v("不是一个函数，则 以"),_("code",[e._v("x")]),e._v("为值fulfill "),_("code",[e._v("promise")]),e._v("。")])])]),e._v(" "),_("li",[e._v("如果 "),_("code",[e._v("x")]),e._v(" 不是对象也不是函数，则以"),_("code",[e._v("x")]),e._v("为值 fulfill "),_("code",[e._v("promise")]),e._v("。")])]),e._v(" "),_("h2",{attrs:{id:"参考资料"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[e._v("#")]),e._v(" 参考资料")]),e._v(" "),_("p",[e._v("官方文档：https://promisesaplus.com/")]),e._v(" "),_("p",[e._v("详解Promise/Promise/A+ 规范：https://www.jianshu.com/p/2207b01e1174")]),e._v(" "),_("p",[e._v("Promise/A+规范：https://segmentfault.com/a/1190000002452115")])])}),[],!1,null,null,null);v.default=s.exports}}]);