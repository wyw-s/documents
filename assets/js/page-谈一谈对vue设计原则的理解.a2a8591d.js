(window.webpackJsonp=window.webpackJsonp||[]).push([[361],{1174:function(e,v,t){"use strict";t.r(v);var l=t(1),u=Object(l.a)({},(function(){var e=this,v=e.$createElement,t=e._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("ol",[t("li",[t("p",[e._v("渐进式JavaScript框架")]),e._v(" "),t("p",[e._v("与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动")])]),e._v(" "),t("li",[t("p",[e._v("易用性")]),e._v(" "),t("p",[e._v("vue提供数据响应式、声明式模板语法和基于配置的组件系统等核心特性。这些使我们只需要关注应用的核心业务即可，只要会写js、html和css就能轻松编写vue应用。")])]),e._v(" "),t("li",[t("p",[e._v("灵活性")]),e._v(" "),t("p",[e._v("渐进式框架的最大优点就是灵活性，如果应用足够小，我们可能仅需要vue核心特性即可完成功能；随着应用规模不断扩大，我们才可能逐渐引入路由、状态管理、vue-cli等库和工具，不管是应用体积还是学习难度都是一个逐渐增加的平和曲线。")])]),e._v(" "),t("li",[t("p",[e._v("高效性")]),e._v(" "),t("p",[e._v("超快的虚拟 DOM 和 diff 算法使我们的应用拥有最佳的性能表现。追求高效的过程还在继续，vue3中引入Proxy对数据响应式改进以及编译器中对于静态内容编译的改进都会让vue更加高效。")])])])])}),[],!1,null,null,null);v.default=u.exports}}]);