(window.webpackJsonp=window.webpackJsonp||[]).push([[178],{864:function(s,e,a){"use strict";a.r(e);var t=a(1),n=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("blockquote",[a("p",[s._v("go modules 是 golang 1.11 新加的特性。GO111MODULE 是个环境变量，可以在更改 Go 导入包的方式时候设置。")])]),s._v(" "),a("p",[s._v("Modules官方定义为：模块是相关Go包的"),a("a",{attrs:{href:"https://so.csdn.net/so/search?q=%E9%9B%86%E5%90%88&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"}},[s._v("集合"),a("OutboundLink")],1),s._v("。modules是源代码交换和版本控制的单元。go命令直接支持使用modules，包括记录和解析对其他模块的依赖性。modules替换旧的基于GOPATH的方法来指定在给定构建中使用哪些源文件。")]),s._v(" "),a("p",[s._v("要注意的是，这个变量在不同 Go 版本有不同的语义:")]),s._v(" "),a("h2",{attrs:{id:"没有包管理阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#没有包管理阶段"}},[s._v("#")]),s._v(" 没有包管理阶段")]),s._v(" "),a("blockquote",[a("p",[s._v("一开始go发布的时候是没有包管理的")])]),s._v(" "),a("p",[s._v("待补充...")]),s._v(" "),a("p",[s._v("什么时候用 GOPATH, 什么时候用 GOMODULE ？ 这是个问题，需要通过 "),a("code",[s._v("GO111MODULE")]),s._v(" 来解决。")]),s._v(" "),a("h3",{attrs:{id:"go-1-11-和-1-12-阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go-1-11-和-1-12-阶段"}},[s._v("#")]),s._v(" "),a("strong",[s._v("Go 1.11 和 1.12 阶段")])]),s._v(" "),a("p",[s._v("即使项目在您的 GOPATH 中，GO111MODULE = on 仍将强制使用 "),a("strong",[s._v("Go 模块")]),s._v("。仍然需要 go.mod 才能正常工作。")]),s._v(" "),a("h3",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")])]),s._v(" "),a("h2",{attrs:{id:"如何使用-modules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何使用-modules"}},[s._v("#")]),s._v(" "),a("strong",[s._v("如何使用 Modules")])]),s._v(" "),a("ul",[a("li",[s._v("把 golang 升级到 1.11（现在1.17 已经发布了，建议使用1.17）")]),s._v(" "),a("li",[s._v("设置 GO111MODULE")])]),s._v(" "),a("h3",{attrs:{id:"go111module"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go111module"}},[s._v("#")]),s._v(" GO111MODULE")]),s._v(" "),a("p",[s._v("GO111MODULE 有三个值：off, on和auto（默认值）:")]),s._v(" "),a("ul",[a("li",[s._v("GO111MODULE=off：无模块支持，强制 Go 表现出 GOPATH 方式，即使你的项目不在 GOPATH 目录里。寻找依赖包的方式将会沿用旧版本那种通过vendor目录或者GOPATH模式来查找。")]),s._v(" "),a("li",[s._v("GO111MODULE=on，模块支持，go命令行会使用modules，不会去GOPATH目录下查找。")]),s._v(" "),a("li",[s._v("GO111MODULE=auto，默认值，go命令行将会根据当前目录来决定是否启用module功能。这种情况下可以分为两种情形：\n"),a("ul",[a("li",[s._v("当前目录在GOPATH/src之外且该目录包含go.mod文件，开启模块支持。")]),s._v(" "),a("li",[s._v("当前文件在包含go.mod文件的目录下面。")])])])]),s._v(" "),a("blockquote",[a("p",[s._v("在使用模块时，GOPATH是无意义的，不过它还是会把下载的依赖存储在$GOPATH/pkg/mod 中，也会把go install 的结果放在 $GOPATH/bin 中。")])]),s._v(" "),a("h3",{attrs:{id:"go-mod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go-mod"}},[s._v("#")]),s._v(" go mod")]),s._v(" "),a("p",[s._v("golang 提供了 "),a("strong",[s._v("go mod")]),s._v("命令来管理包。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ go mod "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v("\nGo mod provides access to operations on modules.\n\nNote that support "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" modules is built into all the go commands,\nnot just "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'go mod'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" For example, day-to-day adding, removing, upgrading,\nand downgrading of dependencies should be "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v(" using "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'go get'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\n        download    download modules to "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" cache "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下载依赖包，下载依赖的module 到本地cache")]),s._v("\n        edit        edit go.mod from tools or scripts "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 编辑go.mod文件")]),s._v("\n        graph       print module requirement graph "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打印模块依赖图")]),s._v("\n        init        initialize new module "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" current directory "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在当前目录初始化mod，在当前文件夹下初始化一个新的module，创建 go.mod 文件")]),s._v("\n        tidy        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" missing and remove unused modules "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取缺少的模块，移除不用的模块")]),s._v("\n        vendor      "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" vendored copy of dependencies "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将依赖复制到vendor下")]),s._v("\n        verify      verify dependencies have expected content "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 验证依赖是否正确")]),s._v("\n        why         explain why packages or modules are needed "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 解释为什么需要依赖")]),s._v("\n\nUse "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"go help mod <command>"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" information about a command.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("blockquote",[a("p",[a("code",[s._v("go get")]),s._v(" 通常它是用于提供一个安装或下载包的功能。但如果使用了 Go modules，当你在一个有着 "),a("code",[s._v("go.mod")]),s._v(" 文件存在的仓库下使用这个命令会将你所"),a("code",[s._v("下载或安装")]),s._v("的包静默"),a("code",[s._v("记录于")]),s._v(" "),a("code",[s._v("go.mod")]),s._v(" 文件中。")])])])}),[],!1,null,null,null);e.default=n.exports}}]);