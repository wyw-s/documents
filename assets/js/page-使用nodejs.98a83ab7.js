(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{814:function(s,t,n){"use strict";n.r(t);var a=n(1),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("blockquote",[n("p",[s._v("用 Node.js 编程是一件令人愉快的事情，你会发现像这样的语言是很容易入门的，可以快速了解到它的细节，然后掌握它。")])]),s._v(" "),n("h2",{attrs:{id:"hello-world"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hello-world"}},[s._v("#")]),s._v(" Hello World")]),s._v(" "),n("blockquote",[n("p",[s._v("请保证你已经安装了Nodejs；")])]),s._v(" "),n("ol",[n("li",[n("p",[s._v("打印"),n("code",[s._v("hello world")]),s._v(";")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("打开你常用的文本编辑器，在其中输入：console.log('Hello World');")]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// helloWorld.js")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello world'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("保存后修改文件名为 helloworld.js ；")])]),s._v(" "),n("li",[n("p",[s._v("打开终端，进入 helloworld.js 所在的目录，")])]),s._v(" "),n("li",[n("p",[s._v("执行以下命令：node helloworld.js")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("C:"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("Users"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("ASUS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("Desktop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("test  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("test@1.0.0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n$ node helloWorld.js\nhello world\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])])])])]),s._v(" "),n("h2",{attrs:{id:"node-js-命令行工具"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#node-js-命令行工具"}},[s._v("#")]),s._v(" Node.js 命令行工具")]),s._v(" "),n("blockquote",[n("p",[s._v("在前面的 Hello World 示例中，我们用到了命令行中的 node 命令，输入 node --help可以看到详细的帮助信息：")])]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("C:"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("Users"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("ASUS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("Desktop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("test  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("test@1.0.0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                                           \n$ node -h                                                                          \nUsage: node "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" script.js "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("                                    \n       node inspect "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" script.js "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" host:port "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("                \n                                                                                   \nOptions:                                                                           \n  -                                          script "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" from stdin "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" no \n                                             interactive mode "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("            \n  --                                         indicate the end of node options      \n  --abort-on-uncaught-exception              aborting instead of exiting causes a c\n                                             "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" analysis                          \n  -c, --check                                syntax check script without executing \n  --completion-bash                          print source-able "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" completion scri\n  --cpu-prof                                 Start the V8 CPU profiler on start up,\n                                             profile to disk before exit. If --cpu-\n                                             specified, "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),s._v(" the profile to the cu\n  --cpu-prof-dir"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".                         Directory where the V8 profiles genera\n                                             be placed. Does not affect --prof.    \n  --cpu-prof-interval"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".                    specified sampling interval "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" microse\n                                             profile generated with --cpu-prof. "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("de\n  --cpu-prof-name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".                        specified "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" name of the V8 CPU prof\n                                             --cpu-prof                            \n  --disable-proto"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".                        disable Object.prototype.__proto__    \n  --disallow-code-generation-from-strings    disallow "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("eval")]),s._v(" and friends             \n  --enable-source-maps                       experimental Source Map V3 support    \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("blockquote",[n("p",[s._v("其中显示了 node 的用法，运行 Node.js 程序的基本方法就是执行 node script.js，其中 script.js是脚本的文件名。")])]),s._v(" "),n("h2",{attrs:{id:"repl-模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#repl-模式"}},[s._v("#")]),s._v(" REPL 模式")]),s._v(" "),n("blockquote",[n("p",[s._v("REPL （Read-eval-print loop），即输入—求值—输出循环。使用 cmd 打开的 shell，可以进入一个即时求值的运行环境。运行无参数的 node 将会启动一个 JavaScript的交互式 shell：")])]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("C:"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("Users"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("ASUS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("Desktop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("test  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("test@1.0.0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n$ node\nWelcome to Node.js v12.18.0.\nType "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('".help"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" information.\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" console.log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello World'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nHello World\nundefined\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" consol.log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello World'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nUncaught ReferenceError: consol is not defined\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("blockquote",[n("p",[s._v("进入 REPL 模式以后，会出现一个“>”提示符提示你输入命令，输入后按回车， Node.js将会解析并执行命令。如果你执行了一个函数，那么 REPL 还会在下面显示这个函数的返回值，上面例子中的 undefined 就是 console.log 的返回值。如果你输入了一个错误的指令， REPL 则会立即显示错误并输出调用栈。在任何时候，连续按两次 Ctrl + C 即可推出Node.js 的 REPL 模式。node 提出的 REPL 在应用开发时会给人带来很大的便利，例如我们可以测试一个包能否正常使用，单独调用应用的某一个模块，执行简单的计算等 ;")])]),s._v(" "),n("h2",{attrs:{id:"建立-http-服务器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#建立-http-服务器"}},[s._v("#")]),s._v(" 建立 HTTP 服务器")]),s._v(" "),n("blockquote",[n("p",[s._v("Node.js 将“HTTP服务器”这一层抽离，直接面向浏览器用户,所以我们只需几行代码就可以创建一个http服务器；")])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// app.js")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 引入内置的 http 模块")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" http "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nhttp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createServer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// charset=utf-8 识别中文字符")]),s._v("\n  res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("writeHead")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Content-Type'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'text/html;charset=utf-8'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'你好'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<h1>Node.js</h1>'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("listen")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("err")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'服务启动成功'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 终端：node app.js 你会看到  服务启动成功 ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打开浏览器访问 http://127.0.0.1:3000  ，你会看到 你好 Node.js")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("blockquote",[n("p",[s._v("用 Node.js 实现的最简单的 HTTP 服务器就这样诞生了。这个程序调用了 Node.js 提供的http 模块，对所有 HTTP 请求答复同样的内容并监听 3000 端口。")])]),s._v(" "),n("p",[n("strong",[s._v("小技巧--使用 "),n("a",{attrs:{href:"https://www.npmjs.com/package/nodemon",target:"_blank",rel:"noopener noreferrer"}},[s._v("nodemon"),n("OutboundLink")],1)])]),s._v(" "),n("p",[s._v("在开发 Node.js 实现的 HTTP 应用时会发现，无论你修改了代码的哪一部份，都必须终止Node.js 再重新运行才会奏效。这是因为 Node.js 只有在第一次引用到某部份时才会去解析脚本文件，以后都会直接访问内存，避免重复载入。 Node.js的这种设计虽然有利于提高性能，却不利于开发调试，因为我们在开发过程中总是希望修改后立即看到效果，而不是每次都要终止进程并重启。\nnodemon可以帮助你实现这个功能，它会监视你对代码的改动，并自动重启 Node.js。使用方法很简单，首先使用 npm 安装nodemon：")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# npm 安装")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" i nodemon\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看是否安装成功；")]),s._v("\nnodemon -v\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行app.js")]),s._v("\nnodemon app.js\n\nASUS@yaweidediannao MINGW64 ~/Desktop/test\n$ nodemon app.js \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("nodemon"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.0")]),s._v(".7\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("nodemon"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" to restart at any time, enter "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("rs"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("nodemon"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" watching path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": *.*\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("nodemon"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" watching extensions: js,mjs,json\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("nodemon"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" starting "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("node app.js"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n服务启动成功\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("blockquote",[n("p",[s._v("当你的代码被改动时，它会自动检测并运行；")])])])}),[],!1,null,null,null);t.default=e.exports}}]);