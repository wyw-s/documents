(window.webpackJsonp=window.webpackJsonp||[]).push([[318],{1109:function(s,a,n){"use strict";n.r(a);var e=n(1),t=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("blockquote",[n("p",[s._v("在前一篇中我们通过"),n("code",[s._v("@commitlint/cli")]),s._v("完成了提交规范，本篇将介绍如何自动化生成log文件"),n("code",[s._v("CHANGELOG.md")]),s._v("。")])]),s._v(" "),n("p",[s._v("官方文档："),n("a",{attrs:{href:"https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-cli#quick-start",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送门"),n("OutboundLink")],1)]),s._v(" "),n("h2",{attrs:{id:"安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 全局安装 ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -g conventional-changelog-cli\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h2",{attrs:{id:"查看帮助"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查看帮助"}},[s._v("#")]),s._v(" 查看帮助")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ conventional-changelog --help\n\n  Generate a changelog from "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" metadata                                                                    \n                                                                                                            \n  Usage                                                                                                     \n    conventional-changelog                                                                                  \n                                                                                                            \n  Example                                                                                                   \n    conventional-changelog -i CHANGELOG.md --same-file                                                      \n                                                                                                            \n  Options                                                                                                   \n    -i, --infile              Read the CHANGELOG from this "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("                                             \n                                                                                                            \n    -o, --outfile             Write the CHANGELOG to this "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("                                              \n                              If unspecified, it prints to stdout                                           \n                                                                                                            \n    -s, --same-file           Outputting to the infile so you don't need to specify the same "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" as outfile\n                                                                                                            \n    -p, --preset              Name of the preset you want to use. Must be one of the following:             \n                              angular, atom, codemirror, conventionalcommits, ember, eslint, express, jquery or jshint\n\n    -k, --pkg                 A filepath of where your package.json is located\n                              Default is the closest package.json from cwd\n\n    -a, --append              Should the newer release be appended to the older release\n                              Default: "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n\n    -r, --release-count       How many releases to be generated from the latest\n                              If "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(", the whole changelog will be regenerated and the outfile will be overwritten\n                              Default: "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n    --skip-unstable           If given, unstable tags will be skipped, e.g., x.x.x-alpha.1, x.x.x-rc.2\n\n    -u, --output-unreleased   Output unreleased changelog\n\n    -v, --verbose             Verbose output. Use this "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" debugging\n                              Default: "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n\n    -n, --config              A filepath of your config script\n                              Example of a config script: https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changel\nog-cli/test/fixtures/config.js\n\n    -c, --context             A filepath of a json that is used to define template variables\n    -l, --lerna-package       Generate a changelog "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" a specific lerna package "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(":pkg-name@1.0.0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    -t, --tag-prefix          Tag prefix to consider when reading the tags\n    --commit-path             Generate a changelog scoped to a specific directory\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br")])]),n("h2",{attrs:{id:"生成changelog"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生成changelog"}},[s._v("#")]),s._v(" 生成CHANGELOG")]),s._v(" "),n("blockquote",[n("p",[s._v("执行完下面的命令后会自动生成一个"),n("code",[s._v("CHANGELOG.md")]),s._v("文件。")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("conventional-changelog -p conventionalcommits -i CHANGELOG.md -s -r "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("blockquote",[n("p",[s._v("如果你的项目已经有"),n("code",[s._v("CHANGELOG.md")]),s._v("文件了，那么此命令会覆写你已经存在的文件，如果不想覆盖请使用以下命令：")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("conventional-changelog -p conventionalcommits -i CHANGELOG.md -s\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("示例：你也可以直接执行此命令 则会在控制台打印出msg信息，不会生成日志文件。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ conventional-changelog\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## <small>3.0.52 (2022-04-09)</small>")]),s._v("\n\n* fix: 修复了一个bug，该bug曾导致使用了自定义权限的接口，在实际调用时无法生成logPerimitId "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("e1a64cc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("xxx/apps/kylin-operation/commit/e1a64cc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h2",{attrs:{id:"配合脚本使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配合脚本使用"}},[s._v("#")]),s._v(" 配合脚本使用")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"conventional-changelog -p conventionalcommits -i CHANGELOG.md -s && git add CHANGELOG.md"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h2",{attrs:{id:"注意事项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[s._v("#")]),s._v(" 注意事项")]),s._v(" "),n("ol",[n("li",[s._v("我这里使用的预处理器是："),n("code",[s._v("conventionalcommits")]),s._v(",此处理器在上篇中已经有过介绍这里不做说明。")])])])}),[],!1,null,null,null);a.default=t.exports}}]);