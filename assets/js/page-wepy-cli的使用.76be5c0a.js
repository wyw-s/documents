(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{1043:function(t,s,v){"use strict";v.r(s);var e=v(1),_=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"wepy框架概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wepy框架概述"}},[t._v("#")]),t._v(" WePY框架概述")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("WePY")]),t._v(" 是腾讯官方出品的一个小程序快速开发框架，对原生小程序的开发模式进行了再次封装，更贴近于 MVVM 架构模式，并支持ES6/7的一些新特性，同时语法风格更接近于 Vue.js，使用 WePY 框架能够提高小程序的开发效率。")])]),t._v(" "),e("p",[t._v("**注意：**WePY 只是小程序的快速开发框架之一，市面上还有诸如 mpvue、taro、uniapp 之类的小程序开发框架也比较流行。")]),t._v(" "),e("h2",{attrs:{id:"为什么要使用wepy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用wepy"}},[t._v("#")]),t._v(" 为什么要使用WePY")]),t._v(" "),e("ol",[e("li",[e("p",[e("strong",[t._v("WePY")]),t._v(" 相比于原生小程序开发，拥有众多的"),e("strong",[t._v("开发特性")]),t._v("和"),e("strong",[t._v("优化方案")]),t._v("，例如：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("开发风格接近于 Vue.js，支持很多vue中的语法特性；")])]),t._v(" "),e("li",[e("p",[t._v("通过 polyfill 让小程序完美支持 Promise；")])]),t._v(" "),e("li",[e("p",[t._v("可以使用ES6等诸多高级语法特性，简化代码，提高开发效率；")])]),t._v(" "),e("li",[e("p",[t._v("对小程序本身的性能做出了进一步的优化；")])]),t._v(" "),e("li",[e("p",[t._v("支持第三方的 npm 资源；")])]),t._v(" "),e("li",[e("p",[t._v("支持多种插件处理和编译器；")])]),t._v(" "),e("li",[e("p",[t._v("letc…")])])])])]),t._v(" "),e("h2",{attrs:{id:"安装-wepy-框架"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-wepy-框架"}},[t._v("#")]),t._v(" "),e("strong",[t._v("安装")]),t._v(" "),e("strong",[t._v("WePY")]),t._v(" "),e("strong",[t._v("框架")])]),t._v(" "),e("blockquote",[e("p",[t._v("WePY 的安装或更新都通过 npm 进行，全局安装或更新 WePY 命令行工具，可以在终端运行以下命令：")])]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" wepy-cli -g\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"初始化-wepy-项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化-wepy-项目"}},[t._v("#")]),t._v(" 初始化 "),e("strong",[t._v("WePY")]),t._v(" "),e("strong",[t._v("项目")])]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("wepy init standard myproject\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("blockquote",[e("p",[t._v("其中，”wepy init” 是固定写法，代表要初始化 wepy 项目；")]),t._v(" "),e("p",[t._v("”standard” 代表模板类型为标准模板，可以运行 ”wepy list” 命令查看所有可用的项目模板；")]),t._v(" "),e("p",[t._v("”myproject” 为自定义的项目名称。")]),t._v(" "),e("p",[t._v("**注意：**创建项目的时候，要勾选 ESLint 选项！")])]),t._v(" "),e("h2",{attrs:{id:"wepy项目与小程序项目的关系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wepy项目与小程序项目的关系"}},[t._v("#")]),t._v(" WePY项目与小程序项目的关系")]),t._v(" "),e("blockquote",[e("p",[t._v("通过 wepy init 命令初始化的 wepy 项目，准确来说只是一个模板项目，不能直接当作小程序运行。需要运行相关的命令，"),e("strong",[t._v("把模板项目编译为小程序项目")]),t._v("，才可以运行。")])]),t._v(" "),e("p",[e("img",{attrs:{src:v(685),alt:"1582021822995"}})]),t._v(" "),e("h2",{attrs:{id:"实时编译wepy项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实时编译wepy项目"}},[t._v("#")]),t._v(" 实时编译WePY项目")]),t._v(" "),e("blockquote",[e("p",[t._v("使用 wepy init 命令初始化项目后，只是得到了一个模板项目，如果想开启实时编译，得到小程序项目，步骤如下：")]),t._v(" "),e("p",[t._v("①运行 cd myproject 切换至 WePY 项目根目录")]),t._v(" "),e("p",[t._v("②运行 npm install 安装 WePY 项目依赖项")]),t._v(" "),e("p",[t._v("③运行 wepy build --watch 开启实时编译")]),t._v(" "),e("p",[e("strong",[t._v("注意："),e("strong",[t._v("wepy build --watch 命令，会循环监听 WePY 项目中源代码的变化，自动编译生成小程序项目，生成的小程序项目默认被存放于 dist 目录中")]),t._v("。")])])]),t._v(" "),e("p",[e("img",{attrs:{src:v(686),alt:"1582021954024"}})]),t._v(" "),e("h2",{attrs:{id:"加载wepy-项目到微信开发者工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#加载wepy-项目到微信开发者工具"}},[t._v("#")]),t._v(" 加载"),e("strong",[t._v("WePY")]),t._v(" "),e("strong",[t._v("项目到微信开发者工具")])]),t._v(" "),e("blockquote",[e("p",[t._v("1.7.0 版本之后的 wepy-cli 工具生成的项目根目录下，包含 "),e("strong",[t._v("project.config.json")]),t._v(" 文件，记录了项目的基本配置信息，例如：项目的名称、appId、生成的小程序项目根路径等。")]),t._v(" "),e("p",[t._v("如果项目中存在 "),e("strong",[t._v("project.config.json")]),t._v(" 文件，使用 微信开发者工具 --\x3e 导入项目，”项目目录”请选择 wepy 项目根目录，即可根据 project.config.json 文件中的配置，把 wepy 编译生成的小程序项目加载到微信开发者工具中。")])]),t._v(" "),e("h3",{attrs:{id:"wpy文件的组成部分"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wpy文件的组成部分"}},[t._v("#")]),t._v(" "),e("code",[t._v(".wpy")]),t._v("文件的组成部分")]),t._v(" "),e("blockquote",[e("p",[t._v("一个 .wpy 文件可分为三大部分，各自对应于一个标签：")]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("脚本部分")]),t._v("，即 "),e("script"),t._v(" 标签中的内容，又可分为两个部分：")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("逻辑部分")]),t._v("，除了 config 对象之外的部分，对应于原生的 .js 文件")]),t._v(" "),e("li",[e("strong",[t._v("配置部分")]),t._v("，即 config 对象，对应于原生的 .json 文件")])]),t._v(" "),e("ol",[e("li",[e("p",[e("strong",[t._v("结构部分")]),t._v("，即 "),void 0,t._v(" 模板部分，对应于原生的 .wxml 文件。")],2)]),t._v(" "),e("li",[e("p",[e("strong",[t._v("样式部分")]),t._v("，即")]),e("style"),t._v("样式部分，对应于原生的 .wxss 文件。"),e("p")])]),t._v(" "),e("p",[t._v("其中，"),e("strong",[t._v("小程序入口文件")]),t._v(" "),e("strong",[t._v("app.wpy")]),t._v(" "),e("strong",[t._v("不需要")]),t._v(" "),e("strong",[t._v("template")]),t._v("，所以编译时会被忽略。")])]),t._v(" "),e("p",[e("img",{attrs:{src:v(687),alt:"1582022260306"}})])])}),[],!1,null,null,null);s.default=_.exports},685:function(t,s,v){t.exports=v.p+"assets/img/1582021822995.18fda5f3.png"},686:function(t,s,v){t.exports=v.p+"assets/img/1582021954024.7f3edd7e.png"},687:function(t,s,v){t.exports=v.p+"assets/img/1582022260306.0a0e36c7.png"}}]);