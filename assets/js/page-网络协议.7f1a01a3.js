(window.webpackJsonp=window.webpackJsonp||[]).push([[335],{649:function(t,s,a){t.exports=a.p+"assets/img/1661180494749.145922b8.png"},650:function(t,s,a){t.exports=a.p+"assets/img/1660746881978.c29b278a.png"},651:function(t,s,a){t.exports=a.p+"assets/img/1661178328855.92758394.png"},652:function(t,s,a){t.exports=a.p+"assets/img/1661179032214.5b826016.png"},653:function(t,s,a){t.exports=a.p+"assets/img/1661179848063.681b31b3.png"},654:function(t,s,a){t.exports=a.p+"assets/img/1661180251804.c8cd0d16.png"},948:function(t,s,a){"use strict";a.r(s);var r=a(1),v=Object(r.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"tcp-udp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp-udp"}},[t._v("#")]),t._v(" TCP/UDP")]),t._v(" "),r("h3",{attrs:{id:"internet协议群-tcp-ip协议群"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#internet协议群-tcp-ip协议群"}},[t._v("#")]),t._v(" Internet协议群（TCP/IP协议群）")]),t._v(" "),r("p",[r("img",{attrs:{src:a(649),alt:"1661180494749"}})]),t._v(" "),r("h3",{attrs:{id:"传输层和网络层"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#传输层和网络层"}},[t._v("#")]),t._v(" 传输层和网络层")]),t._v(" "),r("p",[r("img",{attrs:{src:a(650),alt:"1660746881978"}})]),t._v(" "),r("h3",{attrs:{id:"udp-user-data-diagram"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#udp-user-data-diagram"}},[t._v("#")]),t._v(" UDP(User Data Diagram)")]),t._v(" "),r("ul",[r("li",[t._v("比TCP节省网络资源和速度。")]),t._v(" "),r("li",[t._v("不需要建立连接（延迟更低）。")]),t._v(" "),r("li",[t._v("封包体积更小（传输速度快）。")]),t._v(" "),r("li",[t._v("不关心数据顺序（不需要序号和ACK，传输快速）。")]),t._v(" "),r("li",[t._v("不保证数据不丢失。\n"),r("ul",[r("li",[t._v("没有3次握手。")]),t._v(" "),r("li",[t._v("没有重发校验。")])])])]),t._v(" "),r("h2",{attrs:{id:"http2-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http2-0"}},[t._v("#")]),t._v(" HTTP2.0")]),t._v(" "),r("h3",{attrs:{id:"多路复用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#多路复用"}},[t._v("#")]),t._v(" 多路复用")]),t._v(" "),r("blockquote",[r("p",[t._v("下一次的请求不需要等待上一个响应来之后再发送。但响应的顺序是不变的，FIFO（先进先出）")])]),t._v(" "),r("p",[t._v("在http1.1中，如果你同时请求了多个文件，那么这几个文件会共用一个TCP链接，但是这样就产生了一个问题后面的文件会进行等待。又由于浏览器最大允许同时打开6个TCP链接，所以当请求的文件足够多时，需要排队的文件就越多。")]),t._v(" "),r("p",[r("img",{attrs:{src:a(651),alt:"1661178328855"}})]),t._v(" "),r("p",[t._v("在http2.0中，文件的传输是这样的：")]),t._v(" "),r("p",[r("img",{attrs:{src:a(652),alt:"1661179032214"}})]),t._v(" "),r("div",{staticClass:"custom-block info"},[r("p",{staticClass:"custom-block-title"},[t._v("相关信息")]),t._v(" "),r("p",[t._v("浏览器发送的 http 请求是复用一个 tcp 连接么:")]),t._v(" "),r("ul",[r("li",[t._v("发的不同域名，肯定不复用。")]),t._v(" "),r("li",[t._v("发的同域名。若第一个请求与第二个请求并行发送，不复用。")]),t._v(" "),r("li",[t._v("发的同域名，并且是第一个请求完事了才发第二个请求。则看是否有 connection: keep-alive 请求头，没有则不复用。")]),t._v(" "),r("li",[t._v("发的同域名，第一个请求完了后发第二个请求，有 connection: keep-alive 请求头。则复用同一个 TCP 连接。")])])]),t._v(" "),r("h3",{attrs:{id:"压缩http头部"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#压缩http头部"}},[t._v("#")]),t._v(" 压缩HTTP头部")]),t._v(" "),r("blockquote",[r("p",[t._v("在http中请求和响应都是由【状态行、请求/响应头部、消息主题】三部分组成的。 一般而言，"),r("strong",[t._v("消息主体都会经过gzip压缩")]),t._v("，或者"),r("strong",[t._v("本身传输的就是压缩过后的二进制文件")]),t._v("（如图片、音频等），但是"),r("strong",[t._v("状态行和头部多是没有经过任何压缩，而是直接以纯文本的方式进行传输的。"),r("strong",[t._v("http2提出了对请求和响应的头部进行压缩，即不再只是压缩主题部分，这种")]),t._v("压缩方式就是HAPCK --- 其设计简单而灵活。")])])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://img2020.cnblogs.com/blog/1701102/202103/1701102-20210315090938184-2145610369.png",alt:"img"}})]),t._v(" "),r("h3",{attrs:{id:"服务端推送"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#服务端推送"}},[t._v("#")]),t._v(" 服务端推送")]),t._v(" "),r("p",[t._v("如果浏览器请求了一个html文件，这个文件中包含a.js/b.js等js文件，在http1.1中浏览器会再次请求a.js和b.js文件。但是在http2.0中，会自动返回a.js和b.js文件。可以有效的减少http请求。")]),t._v(" "),r("p",[r("img",{attrs:{src:a(653),alt:"1661179848063"}})]),t._v(" "),r("div",{staticClass:"custom-block info"},[r("p",{staticClass:"custom-block-title"},[t._v("相关信息")]),t._v(" "),r("p",[t._v("服务端推送(悖论)")]),t._v(" "),r("p",[t._v("如果一个"),r("code",[t._v("html")]),t._v("文件包含几十个js文件和上百个图片，那么服务端是不知道那一个js文件先返回那一个后返回的，如果最关键的一个js文件在最后才返回来那么这个页面就会一直无法显示。所以实际使用中需要根据需要来决定是否开启服务端推送。")])]),t._v(" "),r("h2",{attrs:{id:"http3-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http3-0"}},[t._v("#")]),t._v(" HTTP3.0")]),t._v(" "),r("p",[r("img",{attrs:{src:a(654),alt:"1661180251804"}})])])}),[],!1,null,null,null);s.default=v.exports}}]);